<?php

namespace App\Form;

use App\Entity\News;
use App\Entity\Reason;
use App\Entity\Situation;
use App\Entity\Street;
use App\Entity\User;
use App\Entity\Zone;
use Symfony\Bridge\Doctrine\Form\Type\EntityType;
use Symfony\Component\Form\AbstractType;
use Symfony\Component\Form\Extension\Core\Type\MoneyType;
use Symfony\Component\Form\Extension\Core\Type\TextareaType;
use Symfony\Component\Form\Extension\Core\Type\TextType;
use Symfony\Component\Form\FormBuilderInterface;
use Symfony\Component\OptionsResolver\OptionsResolver;

class NewsType extends AbstractType
{
    public function buildForm(FormBuilderInterface $builder, array $options)
    {
        $builder
            ->add('zone', EntityType::class, [
                'label' => ' ',
                'class' => Zone::class,
                'placeholder' => 'Selecciona zona',
                'required' => false
            ])
            ->add('commercial', EntityType::class, [
                'label' => ' ',
                'class' => User::class,
                'placeholder' => 'Selecciona un comercial',
                'required' => false
            ])
            ->add('situation', EntityType::class, [
                'label' => ' ',
                'class' => Situation::class,
                'placeholder' => 'Selecciona una situación'
            ])
            ->add('reason', EntityType::class, [
                'label' => ' ',
                'class' => Reason::class,
                'placeholder' => 'Selecciona un motivo'
            ])
            ->add('street', EntityType::class, [
                'label' => ' ',
                'class' => Street::class,
                'placeholder' => 'Selecciona una calle',
                'required' => false
            ])
            ->add('portal', TextType::class, [
                'label' => ' ',
                'attr' => [
                    'placeholder' => 'Nº Portal',
                ]
            ])
            ->add('floor', TextType::class, [
                'label' => ' ',
                'attr' => [
                    'placeholder' => 'Piso',
                ]
            ])
            ->add('firstName', TextType::class, [
                'label' => ' ',
                'attr' => [
                    'placeholder' => 'Nombres',
                ]
            ])
            ->add('lastName', TextType::class, [
                'label' => ' ',
                'attr' => [
                    'placeholder' => 'Apellidos',
                ]
            ])
            ->add('mobile', TextType::class, [
                'label' => ' ',
                'attr' => [
                    'placeholder' => 'Móvil',
                ]
            ])
            ->add('phone', TextType::class, [
                'label' => ' ',
                'attr' => [
                    'placeholder' => 'Teléfono',
                ]
            ])
            ->add('email', TextType::class, [
                'label' => ' ',
                'attr' => [
                    'placeholder' => 'Correo',
                ]
            ])
            ->add('price', MoneyType::class, [
                'label' => ' ',
                'attr' => [
                    'placeholder' => 'Precio'
                ]
            ])
            ->add('comment', TextareaType::class, [
                'label' => ' ',
                'attr' => [
                    'placeholder' => 'Comentario',
                    'cols' => 100,
                    'rows' => 5
                ]
            ])
            /*->add('owner', EntityType::class, [
                'label' => 'Propietarios',
                'class' => Owner::class,
                'query_builder' => function(EntityRepository $er) {
                    return $er->createQueryBuilder('o')
                        ->orderBy('o.first_name', 'ASC');
                },
                'choice_label' => 'first_name',
                'placeholder' => 'Selecciona propietario',
                'required' => false,
            ])*/
        ;
    }

    public function configureOptions(OptionsResolver $resolver)
    {
        $resolver->setDefaults([
            'data_class' => News::class,
        ]);
    }

    public function getBlockPrefix()
    {
//        return parent::getBlockPrefix(); // TODO: Change the autogenerated stub
        return 'appbundle_news';
    }
}
